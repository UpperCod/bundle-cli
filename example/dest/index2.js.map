{"version":3,"file":"index2.js","sources":["../../node_modules/duplexer/index.js","../../node_modules/pify/index.js","../../node_modules/gzip-size/index.js","../../node_modules/brotli-size/dist/index.js","../../node_modules/simple-string-table/index.js","../../node_modules/@atomico/rollup-plugin-sizes/index.js"],"sourcesContent":["var Stream = require(\"stream\")\nvar writeMethods = [\"write\", \"end\", \"destroy\"]\nvar readMethods = [\"resume\", \"pause\"]\nvar readEvents = [\"data\", \"close\"]\nvar slice = Array.prototype.slice\n\nmodule.exports = duplex\n\nfunction forEach (arr, fn) {\n    if (arr.forEach) {\n        return arr.forEach(fn)\n    }\n\n    for (var i = 0; i < arr.length; i++) {\n        fn(arr[i], i)\n    }\n}\n\nfunction duplex(writer, reader) {\n    var stream = new Stream()\n    var ended = false\n\n    forEach(writeMethods, proxyWriter)\n\n    forEach(readMethods, proxyReader)\n\n    forEach(readEvents, proxyStream)\n\n    reader.on(\"end\", handleEnd)\n\n    writer.on(\"drain\", function() {\n      stream.emit(\"drain\")\n    })\n\n    writer.on(\"error\", reemit)\n    reader.on(\"error\", reemit)\n\n    stream.writable = writer.writable\n    stream.readable = reader.readable\n\n    return stream\n\n    function proxyWriter(methodName) {\n        stream[methodName] = method\n\n        function method() {\n            return writer[methodName].apply(writer, arguments)\n        }\n    }\n\n    function proxyReader(methodName) {\n        stream[methodName] = method\n\n        function method() {\n            stream.emit(methodName)\n            var func = reader[methodName]\n            if (func) {\n                return func.apply(reader, arguments)\n            }\n            reader.emit(methodName)\n        }\n    }\n\n    function proxyStream(methodName) {\n        reader.on(methodName, reemit)\n\n        function reemit() {\n            var args = slice.call(arguments)\n            args.unshift(methodName)\n            stream.emit.apply(stream, args)\n        }\n    }\n\n    function handleEnd() {\n        if (ended) {\n            return\n        }\n        ended = true\n        var args = slice.call(arguments)\n        args.unshift(\"end\")\n        stream.emit.apply(stream, args)\n    }\n\n    function reemit(err) {\n        stream.emit(\"error\", err)\n    }\n}\n","'use strict';\n\nconst processFn = (fn, options) => function (...args) {\n\tconst P = options.promiseModule;\n\n\treturn new P((resolve, reject) => {\n\t\tif (options.multiArgs) {\n\t\t\targs.push((...result) => {\n\t\t\t\tif (options.errorFirst) {\n\t\t\t\t\tif (result[0]) {\n\t\t\t\t\t\treject(result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.shift();\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (options.errorFirst) {\n\t\t\targs.push((error, result) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\targs.push(resolve);\n\t\t}\n\n\t\tfn.apply(this, args);\n\t});\n};\n\nmodule.exports = (input, options) => {\n\toptions = Object.assign({\n\t\texclude: [/.+(Sync|Stream)$/],\n\t\terrorFirst: true,\n\t\tpromiseModule: Promise\n\t}, options);\n\n\tconst objType = typeof input;\n\tif (!(input !== null && (objType === 'object' || objType === 'function'))) {\n\t\tthrow new TypeError(`Expected \\`input\\` to be a \\`Function\\` or \\`Object\\`, got \\`${input === null ? 'null' : objType}\\``);\n\t}\n\n\tconst filter = key => {\n\t\tconst match = pattern => typeof pattern === 'string' ? key === pattern : pattern.test(key);\n\t\treturn options.include ? options.include.some(match) : !options.exclude.some(match);\n\t};\n\n\tlet ret;\n\tif (objType === 'function') {\n\t\tret = function (...args) {\n\t\t\treturn options.excludeMain ? input(...args) : processFn(input, options).apply(this, args);\n\t\t};\n\t} else {\n\t\tret = Object.create(Object.getPrototypeOf(input));\n\t}\n\n\tfor (const key in input) { // eslint-disable-line guard-for-in\n\t\tconst property = input[key];\n\t\tret[key] = typeof property === 'function' && filter(key) ? processFn(property, options) : property;\n\t}\n\n\treturn ret;\n};\n","'use strict';\nconst fs = require('fs');\nconst stream = require('stream');\nconst zlib = require('zlib');\nconst duplexer = require('duplexer');\nconst pify = require('pify');\n\nconst getOptions = options => Object.assign({level: 9}, options);\n\nmodule.exports = (input, options) => {\n\tif (!input) {\n\t\treturn Promise.resolve(0);\n\t}\n\n\treturn pify(zlib.gzip)(input, getOptions(options)).then(data => data.length).catch(_ => 0);\n};\n\nmodule.exports.sync = (input, options) => zlib.gzipSync(input, getOptions(options)).length;\n\nmodule.exports.stream = options => {\n\tconst input = new stream.PassThrough();\n\tconst output = new stream.PassThrough();\n\tconst wrapper = duplexer(input, output);\n\n\tlet gzipSize = 0;\n\tconst gzip = zlib.createGzip(getOptions(options))\n\t\t.on('data', buf => {\n\t\t\tgzipSize += buf.length;\n\t\t})\n\t\t.on('error', () => {\n\t\t\twrapper.gzipSize = 0;\n\t\t})\n\t\t.on('end', () => {\n\t\t\twrapper.gzipSize = gzipSize;\n\t\t\twrapper.emit('gzip-size', gzipSize);\n\t\t\toutput.end();\n\t\t});\n\n\tinput.pipe(gzip);\n\tinput.pipe(output, {end: false});\n\n\treturn wrapper;\n};\n\nmodule.exports.file = (path, options) => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst stream = fs.createReadStream(path);\n\t\tstream.on('error', reject);\n\n\t\tconst gzipStream = stream.pipe(module.exports.stream(options));\n\t\tgzipStream.on('error', reject);\n\t\tgzipStream.on('gzip-size', resolve);\n\t});\n};\n\nmodule.exports.fileSync = (path, options) => module.exports.sync(fs.readFileSync(path), options);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst zlib_1 = require(\"zlib\");\nconst stream_1 = require(\"stream\");\nconst fs_1 = require(\"fs\");\nconst util_1 = require(\"util\");\nconst duplexer = require('duplexer');\nconst readFilePromise = util_1.promisify(fs_1.readFile);\nconst bufferFormatter = (incoming) => typeof incoming === 'string' ? Buffer.from(incoming, 'utf8') : incoming;\nconst optionFormatter = (passed, toEncode) => ({\n    params: {\n        [zlib_1.constants.BROTLI_PARAM_MODE]: passed && 'mode' in passed && passed.mode || zlib_1.constants.BROTLI_DEFAULT_MODE,\n        [zlib_1.constants.BROTLI_PARAM_QUALITY]: passed && 'quality' in passed && passed.quality || zlib_1.constants.BROTLI_MAX_QUALITY,\n        [zlib_1.constants.BROTLI_PARAM_SIZE_HINT]: toEncode ? toEncode.byteLength : 0,\n    }\n});\n/**\n * @param incoming Either a Buffer or string of the value to encode.\n * @param options Subset of Encoding Parameters.\n * @return Promise that resolves with the encoded Buffer length.\n */\nasync function size(incoming, options) {\n    const buffer = bufferFormatter(incoming);\n    return new Promise(function (resolve, reject) {\n        zlib_1.brotliCompress(buffer, optionFormatter(options, buffer), (error, result) => {\n            if (error !== null) {\n                reject(error);\n            }\n            resolve(result.byteLength);\n        });\n    });\n}\nexports.default = size;\n/**\n * @param incoming Either a Buffer or string of the value to encode.\n * @param options Subset of Encoding Parameters.\n * @return Length of encoded Buffer.\n */\nfunction sync(incoming, options) {\n    const buffer = bufferFormatter(incoming);\n    return zlib_1.brotliCompressSync(buffer, optionFormatter(options, buffer)).byteLength;\n}\nexports.sync = sync;\n/**\n * @param options\n * @return PassThroughStream for the contents being compressed\n */\nfunction stream(options) {\n    const input = new stream_1.PassThrough();\n    const output = new stream_1.PassThrough();\n    const wrapper = duplexer(input, output);\n    let size = 0;\n    const brotli = zlib_1.createBrotliCompress(optionFormatter(options))\n        .on('data', buf => {\n        size += buf.length;\n    })\n        .on('error', () => {\n        wrapper.brotliSize = 0;\n    })\n        .on('end', () => {\n        wrapper.brotliSize = size;\n        wrapper.emit('brotli-size', size);\n        output.end();\n    });\n    input.pipe(brotli);\n    input.pipe(output, { end: false });\n    return wrapper;\n}\nexports.stream = stream;\n/**\n * @param path File Path for the file to compress.\n * @param options Subset of Encoding Parameters.\n * @return Promise that resolves with size of encoded file.\n */\nasync function file(path, options) {\n    const file = await readFilePromise(path);\n    return (await size(file, options));\n}\nexports.file = file;\n/**\n * @param path File Path for the file to compress.\n * @param options Subset of Encoding Parameters.\n * @return size of encoded file.\n */\nfunction fileSync(path, options) {\n    const file = fs_1.readFileSync(path);\n    return sync(file, options);\n}\nexports.fileSync = fileSync;\n//# sourceMappingURL=index.js.map","module.exports = function table(rows, padding = 2) {\r\n\tlet spaces = rows.reduce(\r\n\t\t(spaces, row) =>\r\n\t\t\trow.reduce((spaces, value, index) => {\r\n\t\t\t\tvalue = \"\" + value;\r\n\t\t\t\tif (spaces[index] < value.length || spaces[index] == null) {\r\n\t\t\t\t\tspaces[index] = value.length;\r\n\t\t\t\t}\r\n\t\t\t\treturn spaces;\r\n\t\t\t}, spaces),\r\n\t\t[]\r\n\t);\r\n\treturn rows\r\n\t\t.map(row =>\r\n\t\t\trow\r\n\t\t\t\t.map(\r\n\t\t\t\t\t(value, index) =>\r\n\t\t\t\t\t\tvalue + \" \".repeat(spaces[index] - value.length + padding)\r\n\t\t\t\t)\r\n\t\t\t\t.join(\"\")\r\n\t\t)\r\n\t\t.join(\"\\n\");\r\n};\r\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar getGzip = _interopDefault(require('gzip-size'));\nvar getBrotli = _interopDefault(require('brotli-size'));\nvar table = _interopDefault(require('simple-string-table'));\n\nlet color = {\r\n  reset: \"\\x1b[0m\",\r\n  green: \"\\x1b[32m\",\r\n  yellow: \"\\x1b[33m\",\r\n  red: \"\\x1b[31m\"\r\n};\r\n\r\nfunction toKB(size) {\r\n  return (size / 1000).toFixed(2) + \"KB\";\r\n}\r\n\r\nfunction sizes(limit, customLog) {\r\n  if (limit) {\r\n    let danger = Number((\"\" + limit).replace(/kb/gi, \"\")) * 1000;\r\n    limit = {\r\n      danger,\r\n      warning: danger * 0.9\r\n    };\r\n  }\r\n  function getColor(size) {\r\n    if (!limit) return color.green;\r\n    return size > limit.danger\r\n      ? color.red\r\n      : size > limit.warning\r\n      ? color.yellow\r\n      : color.green;\r\n  }\r\n  return {\r\n    name: \"@atomico/rollup-plugin-sizes\",\r\n    async writeBundle(bundles) {\r\n      let rows = [[bundles.length > 1 ? \"FILES\" : \"FILE\", \"GZIP\", \"BROTLI\"]];\r\n      let totalGzip = 0;\r\n      let totalBroli = 0;\r\n      let sizes = {};\r\n      let index = 1;\r\n      for (let key in bundles) {\r\n        let code = bundles[key].code;\r\n        if (typeof code !== \"string\") continue;\r\n        let gzip = await getGzip(code);\r\n        let brotli = await getBrotli(code);\r\n        totalGzip += gzip;\r\n        totalBroli += brotli;\r\n        sizes[index++] = gzip;\r\n        rows.push([key, toKB(gzip), toKB(brotli)]);\r\n      }\r\n\r\n      if (bundles.length > 1) {\r\n        rows.push([\"\", toKB(totalGzip), toKB(totalBroli)]);\r\n      }\r\n\r\n      sizes[index] = totalGzip;\r\n\r\n      if (customLog) {\r\n        customLog(rows);\r\n      } else {\r\n        console.log(\r\n          [color.reset]\r\n            .concat(\r\n              table(rows)\r\n                .split(\"\\n\")\r\n                .map(\r\n                  (stringRow, index) =>\r\n                    (sizes[index] ? getColor(sizes[index]) : \"\") + stringRow\r\n                ),\r\n              color.reset\r\n            )\r\n            .join(\"\\n\")\r\n        );\r\n      }\r\n    }\r\n  };\r\n}\n\nmodule.exports = sizes;\n"],"names":["writeMethods","readMethods","readEvents","slice","Array","prototype","module","duplex","forEach","arr","fn","i","length","writer","reader","stream","Stream","ended","proxyWriter","proxyReader","proxyStream","on","handleEnd","emit","reemit","writable","readable","methodName","method","apply","arguments","func","args","call","unshift","err","processFn","options","P","promiseModule","resolve","reject","multiArgs","push","result","errorFirst","shift","error","input","Object","assign","exclude","Promise","objType","TypeError","filter","key","match","pattern","test","include","some","ret","excludeMain","create","getPrototypeOf","property","getOptions","level","pify","zlib","gzip","then","data","catch","_","gzipSync","PassThrough","output","wrapper","duplexer","gzipSize","createGzip","buf","end","pipe","path","fs","createReadStream","gzipStream","exports","sync","readFileSync","util_1","fs_1","zlib_1","stream_1","table","rows","padding","spaces","reduce","row","value","index","map","repeat","join","_interopDefault","ex","getGzip","require","getBrotli","color","reset","green","yellow","red","toKB","size","toFixed","sizes","limit","customLog","danger","Number","replace","warning","getColor","name","writeBundle","bundles","totalGzip","totalBroli","code","brotli","console","log","concat","split","stringRow"],"mappings":"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"}